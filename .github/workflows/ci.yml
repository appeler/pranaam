name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[test,dev]
        
    - name: Verify installation
      run: |
        python -c "import pranaam; print('✅ Pranaam installation successful')"
        python -c "import tensorflow as tf; print(f'✅ TensorFlow {tf.__version__} loaded')"

    - name: Format check with black
      run: |
        black --check --diff pranaam/

    - name: Lint with ruff
      run: |
        ruff check pranaam/

    - name: Type check with mypy
      run: |
        mypy pranaam/

    - name: Test with pytest (fast tests only)
      run: |
        pytest -m "not slow" --tb=short -v --maxfail=5

    - name: Test with pytest (all tests)
      if: matrix.python-version == '3.11'
      run: |
        pytest --tb=short --maxfail=10

  e2e-tests:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[test]

    - name: Verify TensorFlow installation
      run: |
        python -c "import tensorflow as tf; print(f'TensorFlow: {tf.__version__}')"
        python -c "import keras; print(f'Keras: {keras.__version__}')"

    - name: Run E2E tests (with model download)
      run: |
        pytest pranaam/tests/test_e2e.py -v -m integration --tb=short
      timeout-minutes: 15
      env:
        # Prevent timeouts during model download
        PYTEST_TIMEOUT: 900
        
    - name: Build package
      run: |
        pip install build twine
        python -m build
        python -m twine check dist/* --strict

  docs:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[docs]

    - name: Build documentation
      run: |
        cd docs
        sphinx-build -b html . _build/html -W --keep-going
      continue-on-error: true  # Don't fail build if docs have warnings

    - name: Deploy to GitHub Pages
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs/_build/html